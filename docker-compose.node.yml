services:
  redis:
    image: redis:7-alpine
    container_name: talent-radar-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - talent-radar-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: node:22-alpine
    container_name: talent-radar-api-node
    working_dir: /app/apps/api
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: "file:./dev.db"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # AI Configuration
      AI_SERVICE_ENABLED: "true"
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      AI_MODEL_DEFAULT: gpt-5-nano
      AI_TIMEOUT: 60000
      AI_MAX_RETRIES: 3
      AI_ENABLE_CACHING: "true"
      AI_CACHE_EXPIRY_HOURS: 24
      AI_MAX_CONTENT_LENGTH: 10000
      # Scraper Configuration
      SCRAPER_ENABLED: "true"
      DEVBG_BASE_URL: https://dev.bg
      DEVBG_API_URL: https://dev.bg/company/jobs/java/
      DEVBG_REQUEST_TIMEOUT: 30000
      DEVBG_REQUEST_DELAY: 2000
      DEVBG_MAX_PAGES: 10
      DEVBG_USER_AGENT: "TalentRadar/1.0 (Job Aggregator)"
      # Scraper Queue Settings
      SCRAPER_QUEUE_ATTEMPTS: 3
      SCRAPER_QUEUE_BACKOFF_DELAY: 5000
      SCRAPER_QUEUE_KEEP_COMPLETED: 100
      SCRAPER_QUEUE_KEEP_FAILED: 50
      # Scraper Filters
      SCRAPER_TECH_FILTER: java,spring,hibernate,maven,gradle,mysql,postgresql,docker,kubernetes,aws
      SCRAPER_LOCATION_FILTER: bulgaria,sofia,plovdiv,varna,burgas,remote
      SCRAPER_JOB_TYPE_FILTER: backend,full-stack,java-developer
      # Monitoring & Metrics
      METRICS_ENABLED: "true"
      HEALTH_CHECK_ENABLED: "true"
      # Scraper Limits
      SCRAPER_MAX_VACANCIES: 5
    ports:
      - "3000:3000"
    volumes:
      - ./apps/api:/app/apps/api
      - api_data:/app/apps/api/data
      - ./apps/api/dev.db:/app/apps/api/dev.db
      - ./apps/api/prisma:/app/apps/api/prisma
      - /app/apps/api/node_modules
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - talent-radar-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: 
      - sh
      - -c
      - "npm install && sed -i 's/\"type\": \"module\",//g' package.json && npx prisma migrate dev --name init && npx prisma generate && npm run start:dev"

  prisma-studio:
    image: node:22-alpine
    container_name: talent-radar-prisma-studio-node
    working_dir: /app/apps/api
    environment:
      DATABASE_URL: "file:./dev.db"
    ports:
      - "5555:5555"
    volumes:
      - ./apps/api:/app/apps/api
      - ./apps/api/dev.db:/app/apps/api/dev.db
      - ./apps/api/prisma:/app/apps/api/prisma
      - /app/apps/api/node_modules
    networks:
      - talent-radar-network
    profiles:
      - tools
    command: sh -c "npm install && npx prisma studio --port 5555 --hostname 0.0.0.0"

  redis-commander:
    image: ghcr.io/joeferner/redis-commander:latest
    container_name: talent-radar-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - talent-radar-network
    profiles:
      - tools

volumes:
  redis_data:
    name: talent-radar-redis-data
  api_data:
    name: talent-radar-api-data

networks:
  talent-radar-network:
    name: talent-radar-network
    driver: bridge